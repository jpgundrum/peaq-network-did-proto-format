//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: did_document_format.proto

package io.peaq.did;

@kotlin.jvm.JvmName("-initializeverificationMethod")
public inline fun verificationMethod(block: io.peaq.did.VerificationMethodKt.Dsl.() -> kotlin.Unit): io.peaq.did.VerificationMethod =
  io.peaq.did.VerificationMethodKt.Dsl._create(io.peaq.did.VerificationMethod.newBuilder()).apply { block() }._build()
public object VerificationMethodKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.peaq.did.VerificationMethod.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.peaq.did.VerificationMethod.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.peaq.did.VerificationMethod = _builder.build()

    /**
     * <code>string id = 1;</code>
     */
    public var id: kotlin.String
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * <code>string id = 1;</code>
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * <code>.document.VerificationType type = 2;</code>
     */
    public var type: io.peaq.did.VerificationType
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * <code>.document.VerificationType type = 2;</code>
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * <code>string controller = 3;</code>
     */
    public var controller: kotlin.String
      @JvmName("getController")
      get() = _builder.getController()
      @JvmName("setController")
      set(value) {
        _builder.setController(value)
      }
    /**
     * <code>string controller = 3;</code>
     */
    public fun clearController() {
      _builder.clearController()
    }

    /**
     * <code>string publicKeyMultibase = 4;</code>
     */
    public var publicKeyMultibase: kotlin.String
      @JvmName("getPublicKeyMultibase")
      get() = _builder.getPublicKeyMultibase()
      @JvmName("setPublicKeyMultibase")
      set(value) {
        _builder.setPublicKeyMultibase(value)
      }
    /**
     * <code>string publicKeyMultibase = 4;</code>
     */
    public fun clearPublicKeyMultibase() {
      _builder.clearPublicKeyMultibase()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun io.peaq.did.VerificationMethod.copy(block: io.peaq.did.VerificationMethodKt.Dsl.() -> kotlin.Unit): io.peaq.did.VerificationMethod =
  io.peaq.did.VerificationMethodKt.Dsl._create(this.toBuilder()).apply { block() }._build()

